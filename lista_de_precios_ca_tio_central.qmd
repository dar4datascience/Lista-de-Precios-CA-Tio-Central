---
title: "Lista de Precios CA Tio Central"
author: "Daniel Amieva Rodriguez"
date: last-modified
format: html
execute:
  echo: false
---

![Tio Central Logo](android-chrome-192x192.png)


```{ojs}
import {db, duckdb} from '@rlesur/quarto-duckdb'

import {DuckDBClient} from '@cmudig/duckdb'

```

```{ojs}
db_client = DuckDBClient.of({ca_precios: FileAttachment("lista_de_precios_ca_tio_central.parquet")})
```

```{ojs}
datos_de_precios = db_client.sql`SELECT * FROM ca_precios`

semanas_disponibles_query = db_client.sql`SELECT DISTINCT week_recorded FROM ca_precios`

// Convert BigInt to Number
semanas_disponibles = semanas_disponibles_query.map(row => Number(row.week_recorded))

categorias_disponibles_query = db_client.sql`SELECT DISTINCT category_name FROM ca_precios`

categorias_disponibles = categorias_disponibles_query.map(row => row.category_name)

viewof semana = Inputs.radio(
  semanas_disponibles.map(String), // Convert numbers to strings
  { label: "Semana",
  value: semanas_disponibles.map(String)[0]
  }
)

viewof categorias = Inputs.checkbox(
  categorias_disponibles, 
  { 
    label: "Categorias:",
    value: [categorias_disponibles.map(String)[0]]
  }
)

formattedCategorias = categorias.map(category => `'${category}'`).join(',');

// Interpolating the SQL string with formattedCategorias and semana
sqlQuery = `
  SELECT * 
  FROM ca_precios 
  WHERE week_recorded = ${Number(semana)}
  AND category_name IN (${formattedCategorias}) 
`

//sqlQuery
```


```{ojs}
// Now passing the interpolated query to the db_client.sql function
selected_week_data = db_client.query(sqlQuery)

viewof search = Inputs.search(selected_week_data)
```

```{ojs}
//| column: screen-inset-shaded
Inputs.table(search)
```